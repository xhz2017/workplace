package com.allan.thread;

import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;

public class Demo3_ReentrantLock {
	public static void main(String[] args) {
		final Allan_Print3 p = new Allan_Print3();
		new Thread() {
			public void run() {
				while (true) {
					try {
						p.print1();
					} catch (InterruptedException e) {
						e.printStackTrace();
					}
				}

			}
		}.start();
		new Thread() {
			public void run() {
				try {
					p.print2();
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
		}.start();
		new Thread() {
			public void run() {
				try {
					p.print3();
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
		}.start();
	}
}

class Allan_Print3 {
	ReentrantLock r = new ReentrantLock();
	Condition c1 = r.newCondition();
	Condition c2 = r.newCondition();
	Condition c3 = r.newCondition();
	static int flag = 1;

	public void print1() throws InterruptedException {

		r.lock();
		if (flag != 1) {
			c1.await();
		}
		System.out.print("xie");
		System.out.print("hai");
		System.out.print("zhou");
		System.out.println();
		flag = 2;
		c2.signal();
		r.unlock();
	}

	public void print2() throws InterruptedException {
		r.lock();
		if (flag != 2) {
			c2.await();
		}
		System.out.print("wu");
		System.out.print("xiao");
		System.out.print("hong");
		System.out.println();
		flag = 3;
		c3.signal();
		r.unlock();
	}

	public void print3() throws InterruptedException {
		r.lock();
		if (flag != 3) {
			c3.await();
		}
		System.out.print("I");
		System.out.print(" love");
		System.out.print(" you");
		System.out.println();
		flag = 1;
		c3.signal();
		r.unlock();
	}
}